OPUS - 業務委託管理システム
業務委託管理システム「OPUS（Outsourcing Process Unification System）」は、取引先管理、受発注および請求書の管理、日本のインボイス制度に基づいた請求書フォーマットの作成をサポートするウェブアプリケーションです。
目次
特徴
使用技術
環境構築とローカルでの実行方法
前提条件
セットアップ手順
プロジェクト構成
機能詳細
取引先管理
受発注管理
請求書管理
ディレクトリ構成
テストとCI/CD
ライセンス
特徴
取引先管理：取引先（委託先）の情報を登録・編集・検索が可能。
受発注管理：発注書の作成、受注確認、進捗管理をサポート。
請求書管理：日本のインボイス制度に対応した請求書の作成と送信が可能。
ユーザー認証とアクセス制御：ユーザーの認証と権限に基づくアクセス制御を実装。
多言語対応：日本語と英語に対応。
ユニットテストとCI/CD：テスト駆動開発とGitHub Actionsを使用したCI/CDパイプライン。
使用技術
フレームワーク：Next.js (TypeScript)
スタイリング：Tailwind CSS
データベース：SQLite（Prisma ORM）
認証：NextAuth.js
国際化：next-i18next
データフェッチ：React Query
テスト：Jest、React Testing Library
CI/CD：GitHub Actions
環境構築とローカルでの実行方法
前提条件
Node.js（バージョン14以上）
npm または yarn
セットアップ手順
リポジトリのクローン
opus
依存関係のインストール
npmを使用する場合:
install
yarnを使用する場合:
install
環境変数の設定
プロジェクトルートに .env.local ファイルを作成し、必要な環境変数を設定します。
key
NEXTAUTH_SECRET は OpenSSL や他の方法で生成したランダムな文字列にしてください。
Prismaのセットアップ
データベースを初期化し、Prisma Clientを生成します。
init
開発サーバーの起動
dev
または
dev
ブラウザで http://localhost:3000 にアクセスして、アプリケーションを確認できます。
プロジェクト構成
pages/：Next.jsの各ページが配置されています。
components/：再利用可能なReactコンポーネント。
lib/：データベース接続や外部ライブラリの設定。
prisma/：Prismaのスキーマファイルとマイグレーション。
public/：静的ファイルやローカライズ用のファイル。
__tests__/：テストコードが配置されています。
機能詳細
取引先管理
取引先の一覧表示：登録されている取引先の一覧を表示します。
取引先の新規登録：新しい取引先を追加できます。
取引先の詳細表示：取引先の詳細情報を確認できます。
取引先の編集：既存の取引先情報を編集できます。
受発注管理
発注書の作成：新規に発注書を作成し、委託先に送信できます。
受注確認：委託先からの受注確認を管理します。
進捗管理：発注から納品までの進捗を追跡します。
請求書管理
請求書の作成：日本のインボイス制度に準拠した請求書を作成します。
請求書の送信：作成した請求書を取引先に送信できます。
請求書一覧の管理：発行済みの請求書を一覧で管理します。
ディレクトリ構成
md
テストとCI/CD
テストの実行
ユニットテストを実行するには、以下のコマンドを使用します。
test
CI/CDパイプライン
GitHub Actionsを使用して、プッシュおよびプルリクエスト時に自動でテストとビルドが実行されます。
CIの設定ファイルは .github/workflows/ci.yml にあります。
ライセンス
このプロジェクトはMITライセンスの下で公開されています。
---
これでREADMEが完成しました。ローカルでの実行方法も含めていますので、ご確認ください。何か追加のご要望や質問がありましたら、お知らせください！一緒に進めていきましょう。