name: Lighthouse CI
on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun

      - name: Format Lighthouse results
        id: format_results
        if: always()
        run: |
          RESULTS=$(cat .lighthouseci/manifest.json | jq -r '.[] | select(.url != null) | "## üö¶ Lighthouse Report for \(.url)\n\n### Performance Metrics\n- Performance: \(.summary.performance * 100 | floor)%\n- Accessibility: \(.summary.accessibility * 100 | floor)%\n- Best Practices: \(.summary."best-practices" * 100 | floor)%\n- SEO: \(.summary.seo * 100 | floor)%\n\n### Core Web Vitals\n- First Contentful Paint: \(.audits."first-contentful-paint".numericValue | floor)ms\n- Largest Contentful Paint: \(.audits."largest-contentful-paint".numericValue | floor)ms\n- Time to Interactive: \(.audits.interactive.numericValue | floor)ms\n- Total Blocking Time: \(.audits."total-blocking-time".numericValue | floor)ms\n- Cumulative Layout Shift: \(.audits."cumulative-layout-shift".numericValue)\n"')
          echo "results<<EOF" >> $GITHUB_ENV
          echo "$RESULTS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Comment PR
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const results = process.env.results;
            if (!results) {
              return;
            }

            const comment = `# üìä Lighthouse Performance Report

            ${results}

            > This report was automatically generated by Lighthouse CI.
            > [View detailed report](${process.env.LHCI_BUILD_CONTEXT__CURRENT_HASH})`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-results
          path: .lighthouseci/

  # „Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÂü∫Ê∫ñ„ÇíÊ∫Ä„Åü„Åï„Å™„ÅÑÂ†¥Âêà„Å´PR„Çí„Éñ„É≠„ÉÉ„ÇØ
  verify-performance:
    needs: lighthouse
    runs-on: ubuntu-latest
    steps:
      - name: Check Lighthouse score
        run: |
          SCORE=$(cat .lighthouseci/manifest.json | jq -r '.[0].summary.performance')
          if (( $(echo "$SCORE < 0.8" | bc -l) )); then
            echo "Performance score ${SCORE} is below threshold of 0.8"
            exit 1
          fi
