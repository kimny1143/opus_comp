name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    environment:
      name: test
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      APP_URL: ${{ vars.APP_URL }}
      NEXTAUTH_URL: ${{ vars.APP_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Create required directories
        run: |
          mkdir -p dev_docs
          mkdir -p test-results
          mkdir -p playwright-report
          mkdir -p coverage

      - name: Install dependencies
        run: npm ci

      - name: Setup Test Database
        run: |
          chmod +x .github/workflows/setup-db.sh
          ./.github/workflows/setup-db.sh

      - name: Type Check
        run: npm run type-check

      - name: Run Lint
        run: npm run lint --fix

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E Tests
        run: npm run test

      - name: Generate Coverage Report
        run: npm run test:coverage

      - name: Check Coverage Thresholds
        run: npm run coverage:check

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            test-results/
            playwright-report/
            coverage/
          retention-days: 30

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_URL: ${{ vars.APP_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

      # デプロイ手順は環境に応じて追加
